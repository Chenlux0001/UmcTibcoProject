//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace TibcoAGVC.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MissionTaskDto", Namespace="http://schemas.datacontract.org/2004/07/GB.MobileRobot.MissionManagement.MissionS" +
        "ervice.Dtos")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TibcoAGVC.ServiceReference1.PickTaskDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TibcoAGVC.ServiceReference1.DropTaskDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TibcoAGVC.ServiceReference1.GotoTaskDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TibcoAGVC.ServiceReference1.LiftTaskDto))]
    public partial class MissionTaskDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GoalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TaskIndexField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Goal {
            get {
                return this.GoalField;
            }
            set {
                if ((object.ReferenceEquals(this.GoalField, value) != true)) {
                    this.GoalField = value;
                    this.RaisePropertyChanged("Goal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaskIndex {
            get {
                return this.TaskIndexField;
            }
            set {
                if ((this.TaskIndexField.Equals(value) != true)) {
                    this.TaskIndexField = value;
                    this.RaisePropertyChanged("TaskIndex");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PickTaskDto", Namespace="http://schemas.datacontract.org/2004/07/GB.MobileRobot.MissionManagement.MissionS" +
        "ervice.Dtos")]
    [System.SerializableAttribute()]
    public partial class PickTaskDto : TibcoAGVC.ServiceReference1.MissionTaskDto {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CargoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReadSmartTagField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CargoId {
            get {
                return this.CargoIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CargoIdField, value) != true)) {
                    this.CargoIdField = value;
                    this.RaisePropertyChanged("CargoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PortId {
            get {
                return this.PortIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PortIdField, value) != true)) {
                    this.PortIdField = value;
                    this.RaisePropertyChanged("PortId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReadSmartTag {
            get {
                return this.ReadSmartTagField;
            }
            set {
                if ((this.ReadSmartTagField.Equals(value) != true)) {
                    this.ReadSmartTagField = value;
                    this.RaisePropertyChanged("ReadSmartTag");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DropTaskDto", Namespace="http://schemas.datacontract.org/2004/07/GB.MobileRobot.MissionManagement.MissionS" +
        "ervice.Dtos")]
    [System.SerializableAttribute()]
    public partial class DropTaskDto : TibcoAGVC.ServiceReference1.MissionTaskDto {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CargoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CargoId {
            get {
                return this.CargoIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CargoIdField, value) != true)) {
                    this.CargoIdField = value;
                    this.RaisePropertyChanged("CargoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PortId {
            get {
                return this.PortIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PortIdField, value) != true)) {
                    this.PortIdField = value;
                    this.RaisePropertyChanged("PortId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GotoTaskDto", Namespace="http://schemas.datacontract.org/2004/07/GB.MobileRobot.MissionManagement.MissionS" +
        "ervice.Dtos")]
    [System.SerializableAttribute()]
    public partial class GotoTaskDto : TibcoAGVC.ServiceReference1.MissionTaskDto {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PortId {
            get {
                return this.PortIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PortIdField, value) != true)) {
                    this.PortIdField = value;
                    this.RaisePropertyChanged("PortId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LiftTaskDto", Namespace="http://schemas.datacontract.org/2004/07/GB.MobileRobot.MissionManagement.MissionS" +
        "ervice.Dtos")]
    [System.SerializableAttribute()]
    public partial class LiftTaskDto : TibcoAGVC.ServiceReference1.MissionTaskDto {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PortId {
            get {
                return this.PortIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PortIdField, value) != true)) {
                    this.PortIdField = value;
                    this.RaisePropertyChanged("PortId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MissionInfoDto", Namespace="http://schemas.datacontract.org/2004/07/GB.MobileRobot.MissionManagement.MissionS" +
        "ervice.Dtos")]
    [System.SerializableAttribute()]
    public partial class MissionInfoDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AgvIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MissionIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AgvId {
            get {
                return this.AgvIdField;
            }
            set {
                if ((this.AgvIdField.Equals(value) != true)) {
                    this.AgvIdField = value;
                    this.RaisePropertyChanged("AgvId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MissionId {
            get {
                return this.MissionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MissionIdField, value) != true)) {
                    this.MissionIdField = value;
                    this.RaisePropertyChanged("MissionId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocationDto", Namespace="http://schemas.datacontract.org/2004/07/GB.MobileRobot.MissionManagement.MissionS" +
        "ervice.Dtos")]
    [System.SerializableAttribute()]
    public partial class LocationDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double HeadingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double XField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double YField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Heading {
            get {
                return this.HeadingField;
            }
            set {
                if ((this.HeadingField.Equals(value) != true)) {
                    this.HeadingField = value;
                    this.RaisePropertyChanged("Heading");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double X {
            get {
                return this.XField;
            }
            set {
                if ((this.XField.Equals(value) != true)) {
                    this.XField = value;
                    this.RaisePropertyChanged("X");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Y {
            get {
                return this.YField;
            }
            set {
                if ((this.YField.Equals(value) != true)) {
                    this.YField = value;
                    this.RaisePropertyChanged("Y");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StorageStateDto", Namespace="http://schemas.datacontract.org/2004/07/GB.MobileRobot.MissionManagement.MissionS" +
        "ervice.Dtos")]
    [System.SerializableAttribute()]
    public partial class StorageStateDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CargoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StorageLocationDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CargoId {
            get {
                return this.CargoIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CargoIdField, value) != true)) {
                    this.CargoIdField = value;
                    this.RaisePropertyChanged("CargoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StorageLocationDescription {
            get {
                return this.StorageLocationDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.StorageLocationDescriptionField, value) != true)) {
                    this.StorageLocationDescriptionField = value;
                    this.RaisePropertyChanged("StorageLocationDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AgvStateDto", Namespace="http://schemas.datacontract.org/2004/07/GB.MobileRobot.MissionManagement.MissionS" +
        "ervice.Dtos")]
    [System.SerializableAttribute()]
    public partial class AgvStateDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AgvIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TibcoAGVC.ServiceReference1.MainStateDto MainStateDtoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TibcoAGVC.ServiceReference1.OperationStateDto OperationStateDtoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AgvId {
            get {
                return this.AgvIdField;
            }
            set {
                if ((this.AgvIdField.Equals(value) != true)) {
                    this.AgvIdField = value;
                    this.RaisePropertyChanged("AgvId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TibcoAGVC.ServiceReference1.MainStateDto MainStateDto {
            get {
                return this.MainStateDtoField;
            }
            set {
                if ((this.MainStateDtoField.Equals(value) != true)) {
                    this.MainStateDtoField = value;
                    this.RaisePropertyChanged("MainStateDto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TibcoAGVC.ServiceReference1.OperationStateDto OperationStateDto {
            get {
                return this.OperationStateDtoField;
            }
            set {
                if ((this.OperationStateDtoField.Equals(value) != true)) {
                    this.OperationStateDtoField = value;
                    this.RaisePropertyChanged("OperationStateDto");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MainStateDto", Namespace="http://schemas.datacontract.org/2004/07/GB.MobileRobot.MissionManagement.MissionS" +
        "ervice.Dtos")]
    public enum MainStateDto : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Disabled = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReservedByOperator = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OnMission = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Docking = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationStateDto", Namespace="http://schemas.datacontract.org/2004/07/GB.MobileRobot.MissionManagement.MissionS" +
        "ervice.Dtos")]
    public enum OperationStateDto : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Idle = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Moving = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Handling = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AgvMissionStateDto", Namespace="http://schemas.datacontract.org/2004/07/GB.MobileRobot.MissionManagement.MissionS" +
        "ervice.Dtos")]
    [System.SerializableAttribute()]
    public partial class AgvMissionStateDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActualRunningTaskIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AgvIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MissionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfCompletedTasksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfTasksField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActualRunningTaskIndex {
            get {
                return this.ActualRunningTaskIndexField;
            }
            set {
                if ((this.ActualRunningTaskIndexField.Equals(value) != true)) {
                    this.ActualRunningTaskIndexField = value;
                    this.RaisePropertyChanged("ActualRunningTaskIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AgvId {
            get {
                return this.AgvIdField;
            }
            set {
                if ((this.AgvIdField.Equals(value) != true)) {
                    this.AgvIdField = value;
                    this.RaisePropertyChanged("AgvId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MissionId {
            get {
                return this.MissionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MissionIdField, value) != true)) {
                    this.MissionIdField = value;
                    this.RaisePropertyChanged("MissionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfCompletedTasks {
            get {
                return this.NumberOfCompletedTasksField;
            }
            set {
                if ((this.NumberOfCompletedTasksField.Equals(value) != true)) {
                    this.NumberOfCompletedTasksField = value;
                    this.RaisePropertyChanged("NumberOfCompletedTasks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfTasks {
            get {
                return this.NumberOfTasksField;
            }
            set {
                if ((this.NumberOfTasksField.Equals(value) != true)) {
                    this.NumberOfTasksField = value;
                    this.RaisePropertyChanged("NumberOfTasks");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IMissionService")]
    public interface IMissionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissionService/ConnectToService", ReplyAction="http://tempuri.org/IMissionService/ConnectToServiceResponse")]
        void ConnectToService(string customerServiceUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissionService/ConnectToService", ReplyAction="http://tempuri.org/IMissionService/ConnectToServiceResponse")]
        System.Threading.Tasks.Task ConnectToServiceAsync(string customerServiceUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissionService/SetSystemTime", ReplyAction="http://tempuri.org/IMissionService/SetSystemTimeResponse")]
        void SetSystemTime(System.DateTime dateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissionService/SetSystemTime", ReplyAction="http://tempuri.org/IMissionService/SetSystemTimeResponse")]
        System.Threading.Tasks.Task SetSystemTimeAsync(System.DateTime dateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissionService/RequestHeartBeat", ReplyAction="http://tempuri.org/IMissionService/RequestHeartBeatResponse")]
        void RequestHeartBeat();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissionService/RequestHeartBeat", ReplyAction="http://tempuri.org/IMissionService/RequestHeartBeatResponse")]
        System.Threading.Tasks.Task RequestHeartBeatAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissionService/GetAgvIds", ReplyAction="http://tempuri.org/IMissionService/GetAgvIdsResponse")]
        int[] GetAgvIds();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissionService/GetAgvIds", ReplyAction="http://tempuri.org/IMissionService/GetAgvIdsResponse")]
        System.Threading.Tasks.Task<int[]> GetAgvIdsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissionService/InvokeMissionTasks", ReplyAction="http://tempuri.org/IMissionService/InvokeMissionTasksResponse")]
        void InvokeMissionTasks(string missionId, TibcoAGVC.ServiceReference1.MissionTaskDto[] missionTaskDtos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissionService/InvokeMissionTasks", ReplyAction="http://tempuri.org/IMissionService/InvokeMissionTasksResponse")]
        System.Threading.Tasks.Task InvokeMissionTasksAsync(string missionId, TibcoAGVC.ServiceReference1.MissionTaskDto[] missionTaskDtos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissionService/AbortMission", ReplyAction="http://tempuri.org/IMissionService/AbortMissionResponse")]
        void AbortMission(string missionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissionService/AbortMission", ReplyAction="http://tempuri.org/IMissionService/AbortMissionResponse")]
        System.Threading.Tasks.Task AbortMissionAsync(string missionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissionService/ChangeMission", ReplyAction="http://tempuri.org/IMissionService/ChangeMissionResponse")]
        void ChangeMission(string missionId, TibcoAGVC.ServiceReference1.MissionTaskDto[] missionTaskDtos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissionService/ChangeMission", ReplyAction="http://tempuri.org/IMissionService/ChangeMissionResponse")]
        System.Threading.Tasks.Task ChangeMissionAsync(string missionId, TibcoAGVC.ServiceReference1.MissionTaskDto[] missionTaskDtos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissionService/GetMissionInfos", ReplyAction="http://tempuri.org/IMissionService/GetMissionInfosResponse")]
        TibcoAGVC.ServiceReference1.MissionInfoDto[] GetMissionInfos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissionService/GetMissionInfos", ReplyAction="http://tempuri.org/IMissionService/GetMissionInfosResponse")]
        System.Threading.Tasks.Task<TibcoAGVC.ServiceReference1.MissionInfoDto[]> GetMissionInfosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissionService/NotifyLoadAccepted", ReplyAction="http://tempuri.org/IMissionService/NotifyLoadAcceptedResponse")]
        void NotifyLoadAccepted(int agvId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissionService/NotifyLoadAccepted", ReplyAction="http://tempuri.org/IMissionService/NotifyLoadAcceptedResponse")]
        System.Threading.Tasks.Task NotifyLoadAcceptedAsync(int agvId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissionService/NotifyUnloadAccepted", ReplyAction="http://tempuri.org/IMissionService/NotifyUnloadAcceptedResponse")]
        void NotifyUnloadAccepted(int agvId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissionService/NotifyUnloadAccepted", ReplyAction="http://tempuri.org/IMissionService/NotifyUnloadAcceptedResponse")]
        System.Threading.Tasks.Task NotifyUnloadAcceptedAsync(int agvId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissionService/GetBatteryLevel", ReplyAction="http://tempuri.org/IMissionService/GetBatteryLevelResponse")]
        int GetBatteryLevel(int agvId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissionService/GetBatteryLevel", ReplyAction="http://tempuri.org/IMissionService/GetBatteryLevelResponse")]
        System.Threading.Tasks.Task<int> GetBatteryLevelAsync(int agvId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissionService/GetLocation", ReplyAction="http://tempuri.org/IMissionService/GetLocationResponse")]
        TibcoAGVC.ServiceReference1.LocationDto GetLocation(int agvId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissionService/GetLocation", ReplyAction="http://tempuri.org/IMissionService/GetLocationResponse")]
        System.Threading.Tasks.Task<TibcoAGVC.ServiceReference1.LocationDto> GetLocationAsync(int agvId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissionService/GetStorageStates", ReplyAction="http://tempuri.org/IMissionService/GetStorageStatesResponse")]
        TibcoAGVC.ServiceReference1.StorageStateDto[] GetStorageStates(int agvId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissionService/GetStorageStates", ReplyAction="http://tempuri.org/IMissionService/GetStorageStatesResponse")]
        System.Threading.Tasks.Task<TibcoAGVC.ServiceReference1.StorageStateDto[]> GetStorageStatesAsync(int agvId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissionService/GetAgvState", ReplyAction="http://tempuri.org/IMissionService/GetAgvStateResponse")]
        TibcoAGVC.ServiceReference1.AgvStateDto GetAgvState(int agvId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissionService/GetAgvState", ReplyAction="http://tempuri.org/IMissionService/GetAgvStateResponse")]
        System.Threading.Tasks.Task<TibcoAGVC.ServiceReference1.AgvStateDto> GetAgvStateAsync(int agvId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissionService/GetAgvMissionState", ReplyAction="http://tempuri.org/IMissionService/GetAgvMissionStateResponse")]
        TibcoAGVC.ServiceReference1.AgvMissionStateDto GetAgvMissionState(int agvId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissionService/GetAgvMissionState", ReplyAction="http://tempuri.org/IMissionService/GetAgvMissionStateResponse")]
        System.Threading.Tasks.Task<TibcoAGVC.ServiceReference1.AgvMissionStateDto> GetAgvMissionStateAsync(int agvId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissionService/Dock", ReplyAction="http://tempuri.org/IMissionService/DockResponse")]
        void Dock(string missionId, int agvId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissionService/Dock", ReplyAction="http://tempuri.org/IMissionService/DockResponse")]
        System.Threading.Tasks.Task DockAsync(string missionId, int agvId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissionService/ModifyMissionAssignmentMode", ReplyAction="http://tempuri.org/IMissionService/ModifyMissionAssignmentModeResponse")]
        void ModifyMissionAssignmentMode(GB.MobileRobot.MissionManagement.Shared.Dtos.MissionAssignmentModeDto mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissionService/ModifyMissionAssignmentMode", ReplyAction="http://tempuri.org/IMissionService/ModifyMissionAssignmentModeResponse")]
        System.Threading.Tasks.Task ModifyMissionAssignmentModeAsync(GB.MobileRobot.MissionManagement.Shared.Dtos.MissionAssignmentModeDto mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissionService/NotifySendSmartTag", ReplyAction="http://tempuri.org/IMissionService/NotifySendSmartTagResponse")]
        void NotifySendSmartTag(string missionId, int taskIndex);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissionService/NotifySendSmartTag", ReplyAction="http://tempuri.org/IMissionService/NotifySendSmartTagResponse")]
        System.Threading.Tasks.Task NotifySendSmartTagAsync(string missionId, int taskIndex);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissionService/GetServiceMode", ReplyAction="http://tempuri.org/IMissionService/GetServiceModeResponse")]
        GB.MobileRobot.MissionManagement.Shared.Dtos.ServiceModeDto GetServiceMode();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissionService/GetServiceMode", ReplyAction="http://tempuri.org/IMissionService/GetServiceModeResponse")]
        System.Threading.Tasks.Task<GB.MobileRobot.MissionManagement.Shared.Dtos.ServiceModeDto> GetServiceModeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissionService/GetAgvMode", ReplyAction="http://tempuri.org/IMissionService/GetAgvModeResponse")]
        GB.MobileRobot.MissionManagement.Shared.Dtos.AgvModeDto GetAgvMode(int agvId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissionService/GetAgvMode", ReplyAction="http://tempuri.org/IMissionService/GetAgvModeResponse")]
        System.Threading.Tasks.Task<GB.MobileRobot.MissionManagement.Shared.Dtos.AgvModeDto> GetAgvModeAsync(int agvId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissionService/GetAgvOperationState", ReplyAction="http://tempuri.org/IMissionService/GetAgvOperationStateResponse")]
        GB.MobileRobot.MissionManagement.Shared.Dtos.AgvOperationStateDto GetAgvOperationState(int agvId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissionService/GetAgvOperationState", ReplyAction="http://tempuri.org/IMissionService/GetAgvOperationStateResponse")]
        System.Threading.Tasks.Task<GB.MobileRobot.MissionManagement.Shared.Dtos.AgvOperationStateDto> GetAgvOperationStateAsync(int agvId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissionService/GetTotalMileage", ReplyAction="http://tempuri.org/IMissionService/GetTotalMileageResponse")]
        int GetTotalMileage(int agvId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissionService/GetTotalMileage", ReplyAction="http://tempuri.org/IMissionService/GetTotalMileageResponse")]
        System.Threading.Tasks.Task<int> GetTotalMileageAsync(int agvId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMissionServiceChannel : TibcoAGVC.ServiceReference1.IMissionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MissionServiceClient : System.ServiceModel.ClientBase<TibcoAGVC.ServiceReference1.IMissionService>, TibcoAGVC.ServiceReference1.IMissionService {
        
        public MissionServiceClient() {
        }
        
        public MissionServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MissionServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MissionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MissionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void ConnectToService(string customerServiceUrl) {
            base.Channel.ConnectToService(customerServiceUrl);
        }
        
        public System.Threading.Tasks.Task ConnectToServiceAsync(string customerServiceUrl) {
            return base.Channel.ConnectToServiceAsync(customerServiceUrl);
        }
        
        public void SetSystemTime(System.DateTime dateTime) {
            base.Channel.SetSystemTime(dateTime);
        }
        
        public System.Threading.Tasks.Task SetSystemTimeAsync(System.DateTime dateTime) {
            return base.Channel.SetSystemTimeAsync(dateTime);
        }
        
        public void RequestHeartBeat() {
            base.Channel.RequestHeartBeat();
        }
        
        public System.Threading.Tasks.Task RequestHeartBeatAsync() {
            return base.Channel.RequestHeartBeatAsync();
        }
        
        public int[] GetAgvIds() {
            return base.Channel.GetAgvIds();
        }
        
        public System.Threading.Tasks.Task<int[]> GetAgvIdsAsync() {
            return base.Channel.GetAgvIdsAsync();
        }
        
        public void InvokeMissionTasks(string missionId, TibcoAGVC.ServiceReference1.MissionTaskDto[] missionTaskDtos) {
            base.Channel.InvokeMissionTasks(missionId, missionTaskDtos);
        }
        
        public System.Threading.Tasks.Task InvokeMissionTasksAsync(string missionId, TibcoAGVC.ServiceReference1.MissionTaskDto[] missionTaskDtos) {
            return base.Channel.InvokeMissionTasksAsync(missionId, missionTaskDtos);
        }
        
        public void AbortMission(string missionId) {
            base.Channel.AbortMission(missionId);
        }
        
        public System.Threading.Tasks.Task AbortMissionAsync(string missionId) {
            return base.Channel.AbortMissionAsync(missionId);
        }
        
        public void ChangeMission(string missionId, TibcoAGVC.ServiceReference1.MissionTaskDto[] missionTaskDtos) {
            base.Channel.ChangeMission(missionId, missionTaskDtos);
        }
        
        public System.Threading.Tasks.Task ChangeMissionAsync(string missionId, TibcoAGVC.ServiceReference1.MissionTaskDto[] missionTaskDtos) {
            return base.Channel.ChangeMissionAsync(missionId, missionTaskDtos);
        }
        
        public TibcoAGVC.ServiceReference1.MissionInfoDto[] GetMissionInfos() {
            return base.Channel.GetMissionInfos();
        }
        
        public System.Threading.Tasks.Task<TibcoAGVC.ServiceReference1.MissionInfoDto[]> GetMissionInfosAsync() {
            return base.Channel.GetMissionInfosAsync();
        }
        
        public void NotifyLoadAccepted(int agvId) {
            base.Channel.NotifyLoadAccepted(agvId);
        }
        
        public System.Threading.Tasks.Task NotifyLoadAcceptedAsync(int agvId) {
            return base.Channel.NotifyLoadAcceptedAsync(agvId);
        }
        
        public void NotifyUnloadAccepted(int agvId) {
            base.Channel.NotifyUnloadAccepted(agvId);
        }
        
        public System.Threading.Tasks.Task NotifyUnloadAcceptedAsync(int agvId) {
            return base.Channel.NotifyUnloadAcceptedAsync(agvId);
        }
        
        public int GetBatteryLevel(int agvId) {
            return base.Channel.GetBatteryLevel(agvId);
        }
        
        public System.Threading.Tasks.Task<int> GetBatteryLevelAsync(int agvId) {
            return base.Channel.GetBatteryLevelAsync(agvId);
        }
        
        public TibcoAGVC.ServiceReference1.LocationDto GetLocation(int agvId) {
            return base.Channel.GetLocation(agvId);
        }
        
        public System.Threading.Tasks.Task<TibcoAGVC.ServiceReference1.LocationDto> GetLocationAsync(int agvId) {
            return base.Channel.GetLocationAsync(agvId);
        }
        
        public TibcoAGVC.ServiceReference1.StorageStateDto[] GetStorageStates(int agvId) {
            return base.Channel.GetStorageStates(agvId);
        }
        
        public System.Threading.Tasks.Task<TibcoAGVC.ServiceReference1.StorageStateDto[]> GetStorageStatesAsync(int agvId) {
            return base.Channel.GetStorageStatesAsync(agvId);
        }
        
        public TibcoAGVC.ServiceReference1.AgvStateDto GetAgvState(int agvId) {
            return base.Channel.GetAgvState(agvId);
        }
        
        public System.Threading.Tasks.Task<TibcoAGVC.ServiceReference1.AgvStateDto> GetAgvStateAsync(int agvId) {
            return base.Channel.GetAgvStateAsync(agvId);
        }
        
        public TibcoAGVC.ServiceReference1.AgvMissionStateDto GetAgvMissionState(int agvId) {
            return base.Channel.GetAgvMissionState(agvId);
        }
        
        public System.Threading.Tasks.Task<TibcoAGVC.ServiceReference1.AgvMissionStateDto> GetAgvMissionStateAsync(int agvId) {
            return base.Channel.GetAgvMissionStateAsync(agvId);
        }
        
        public void Dock(string missionId, int agvId) {
            base.Channel.Dock(missionId, agvId);
        }
        
        public System.Threading.Tasks.Task DockAsync(string missionId, int agvId) {
            return base.Channel.DockAsync(missionId, agvId);
        }
        
        public void ModifyMissionAssignmentMode(GB.MobileRobot.MissionManagement.Shared.Dtos.MissionAssignmentModeDto mode) {
            base.Channel.ModifyMissionAssignmentMode(mode);
        }
        
        public System.Threading.Tasks.Task ModifyMissionAssignmentModeAsync(GB.MobileRobot.MissionManagement.Shared.Dtos.MissionAssignmentModeDto mode) {
            return base.Channel.ModifyMissionAssignmentModeAsync(mode);
        }
        
        public void NotifySendSmartTag(string missionId, int taskIndex) {
            base.Channel.NotifySendSmartTag(missionId, taskIndex);
        }
        
        public System.Threading.Tasks.Task NotifySendSmartTagAsync(string missionId, int taskIndex) {
            return base.Channel.NotifySendSmartTagAsync(missionId, taskIndex);
        }
        
        public GB.MobileRobot.MissionManagement.Shared.Dtos.ServiceModeDto GetServiceMode() {
            return base.Channel.GetServiceMode();
        }
        
        public System.Threading.Tasks.Task<GB.MobileRobot.MissionManagement.Shared.Dtos.ServiceModeDto> GetServiceModeAsync() {
            return base.Channel.GetServiceModeAsync();
        }
        
        public GB.MobileRobot.MissionManagement.Shared.Dtos.AgvModeDto GetAgvMode(int agvId) {
            return base.Channel.GetAgvMode(agvId);
        }
        
        public System.Threading.Tasks.Task<GB.MobileRobot.MissionManagement.Shared.Dtos.AgvModeDto> GetAgvModeAsync(int agvId) {
            return base.Channel.GetAgvModeAsync(agvId);
        }
        
        public GB.MobileRobot.MissionManagement.Shared.Dtos.AgvOperationStateDto GetAgvOperationState(int agvId) {
            return base.Channel.GetAgvOperationState(agvId);
        }
        
        public System.Threading.Tasks.Task<GB.MobileRobot.MissionManagement.Shared.Dtos.AgvOperationStateDto> GetAgvOperationStateAsync(int agvId) {
            return base.Channel.GetAgvOperationStateAsync(agvId);
        }
        
        public int GetTotalMileage(int agvId) {
            return base.Channel.GetTotalMileage(agvId);
        }
        
        public System.Threading.Tasks.Task<int> GetTotalMileageAsync(int agvId) {
            return base.Channel.GetTotalMileageAsync(agvId);
        }
    }
}
